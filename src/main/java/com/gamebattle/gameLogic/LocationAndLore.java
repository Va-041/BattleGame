package com.gamebattle.gameLogic;

/**
 *  Класс для описания локаций и внешнего текста
 */

import java.util.HashMap;
import java.util.Random;

public class LocationAndLore {

    public static class Location {
        public final String name;
        public final String description;
        public final String mobName;
        public final String mobDescription;
        public final String lore;

        public Location(String name, String description, String mobName, String mobDescription, String lore) {
            this.name = name;
            this.description = description;
            this.mobName = mobName;
            this.mobDescription = mobDescription;
            this.lore = lore;
        }
    }

    public static HashMap<Integer, Location> locations = new HashMap<>();

    // Метод для создания и заполнения локаций
    public static void makeLocations() {
        locations.clear();

        locations.put(1, new Location(
                "Заброшенный Входной Зал",
                "Вы стоите в просторном, разрушающемся зале. Стены, испещренные трещинами, покрыты странной пульсирующей слизью. С потолка капает вода, а воздух наполнен запахом тлена и влажной земли. На восток ведет узкий коридор, откуда доносится легкий скрежет.",
                "Слизень",
                "Большая, полупрозрачная желеобразная масса. Внутри просматриваются остатки костей и доспехов предыдущих авантюристов. Перемещается медленно, оставляя за собой едкий след.",
                "Записка у входа: 'Арибал был прав... сила в синтезе. Но что-то пошло не так. Охранные механизмы вышли из-под контроля. Они... ожили.'"
        ));

        locations.put(2, new Location(
                "Крипта Неупокоенных Душ",
                "Вы входите в холодную, продуваемую сквозняками крипту. Каменные саркофаги разломаны изнутри. В воздухе плавают бледные огоньки, и вы слышите тихий, навязчивый шепот, который сводит с ума. Скелеты, облаченные в истлевшие мантии, медленно поднимаются из праха.",
                "Призрак",
                "Бестелесная, мерцающая фигура, искаженная болью и магией. Ее прикосновение замораживает душу и высасывает жизненные силы. Неуязвим для обычного оружия.",
                "На стене выцарапаны слова: 'Он не дал нам умереть... но и не дал жить. Мы застряли в этом вечном страдании. Проклят будь Арибал!'"
        ));

        locations.put(3, new Location(
                "Усыпальница Стражи",
                "Этот зал когда-то был казармой для личной гвардии Арибала. Теперь это братская могила. Кости в доспехах, повинуясь древней магической команде, хватаются за мечи и щиты, чтобы защитить покой своего господина, даже после смерти.",
                "Скелет-Воин",
                "Искусно владеет мечом и щитом. Его кости пропитаны защитной магией, делающей его более устойчивым, чем кажется. В его пустых глазницах горит зеленый огонек ненависти.",
                "Журнал капитана стражи: 'Приказ получен. Мы охраняем лабораторию до последнего вздоха. Магия Арибала делает нас сильнее... и что-то еще. Я больше не чувствую усталости. И голода. И страха.'"
        ));

        locations.put(4, new Location(
                "Зал Алхимических Ошибок",
                "Комната завалена разбитыми колбами, склянками и странными механизмами. Пол покрыт слоем разноцветной, химической жижи. Из темных углов на вас смотрят десятки пар маленьких, жадных глаз. Здесь Арибал пытался создать идеального слугу, но получил лишь уродливых гоблинов.",
                "Гоблин-Мутант",
                "Кривой, покрытый язвами гуманоид. Его тело искажено неудачными экспериментами: одна рука может быть больше другой, а из спины растет третий глаз. Злобен и использует примитивное оружие, выброшенное алхимиком.",
                "Записи алхимика: 'Образец 74-Б. Введение эссенции гномьего упрямства и оркской силы в базовый гоблиний биоматериал. Результат: агрессия возросла, но интеллект ниже базового. Продолжить наблюдение.'"
        ));

        locations.put(5, new Location(
                "Мастерская Големов",
                "Огромный зал, освещенный тусклым светом магических кристаллов. Повсюду стоят незаконченные глиняные и каменные тела. В центре зала медленно двигается массивная фигура, собранная из обломков скал и древних рун. Земля дрожит от каждого его шага.",
                "Каменный Голем",
                "Исполинская конструкция, наделенная грубой силой и магической защитой. Его тело почти невосприимчиво к стрелам и мечам. Глаза горят ярким магическим пламенем.",
                "Чертеж на столе: 'Сердце Голема. Использован кристалл чистой магии для связи с элементалем земли. Контрольный жезл... жезл не отвечает. Голем вышел из-под контроля. Он слишком силен.'"
        ));

        locations.put(6, new Location(
                "Сердце Бездны - Личная обитель Арибала",
                "Вы попадаете в огромную, куполообразную пещеру. В центре, на острове из застывшей лавы, лежит гигантское, покрытое чешуей существо. Это не настоящий дракон, а чудовищный гибрид, созданный Арибалом из ящера, демонической эссенции и собственной души. Он просыпается, его глаза разгораются, как расплавленное золото.",
                "Псевдо-Дракон Арибала",
                "Ужасающий крылатый змей, изрыгающий клокочущую магическую энергию вместо огня. Его чешуя сияет темной магией, а разум, хоть и могучий, погружен в безумие от непрекращающейся боли слияния.",
                "Последняя запись в дневнике Арибала, лежащем у подножия трона: 'Я так близок... Бессмертие не в том, чтобы избежать смерти, а в том, чтобы стать чем-то большим. Я сольюсь с величайшим из существ и стану богом. Сегодня... я становлюсь легендой.'"
        ));
    }

    // Метод для получения стартовой локации
    public static Location getStartLocation() {
        Random random = new Random();

        int range = (6 - 1) + 1;
        int randomNum = random.nextInt(range);
        System.out.println(randomNum);

        return locations.get(randomNum);

    }

    // Дополнительный метод для получения локации по ID (очень полезно)
    public static Location getLocationById(int id) {
        return locations.get(id);
    }
}
